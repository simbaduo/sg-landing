{"ast":null,"code":"var _jsxFileName = \"/Users/ns/code/stadiumGrub/sg-landing/src/Components/Text/Text.tsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Text({\n  text,\n  bold,\n  medium,\n  black,\n  fontSize,\n  white,\n  orange,\n  nextText,\n  className\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: className,\n      style: {\n        color: white ? \"white\" : orange ? \"#ff761b\" : \"black\",\n        fontSize,\n        fontFamily: bold ? \"Roboto-Bold\" : medium ? \"Roboto-Medium\" : black ? \"Roboto-Black\" : \"Roboto-Regular\"\n      },\n      children: [text, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), nextText]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Text;\n\nvar _c;\n\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"sources":["/Users/ns/code/stadiumGrub/sg-landing/src/Components/Text/Text.tsx"],"names":["Text","text","bold","medium","black","fontSize","white","orange","nextText","className","color","fontFamily"],"mappings":";;;AAYA,eAAe,SAASA,IAAT,CAAc;AAC3BC,EAAAA,IAD2B;AAE3BC,EAAAA,IAF2B;AAG3BC,EAAAA,MAH2B;AAI3BC,EAAAA,KAJ2B;AAK3BC,EAAAA,QAL2B;AAM3BC,EAAAA,KAN2B;AAO3BC,EAAAA,MAP2B;AAQ3BC,EAAAA,QAR2B;AAS3BC,EAAAA;AAT2B,CAAd,EAUL;AACR,sBACE;AAAA,2BACE;AACE,MAAA,SAAS,EAAEA,SADb;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAEJ,KAAK,GAAG,OAAH,GAAaC,MAAM,GAAG,SAAH,GAAe,OADzC;AAELF,QAAAA,QAFK;AAGLM,QAAAA,UAAU,EAAET,IAAI,GACZ,aADY,GAEZC,MAAM,GACN,eADM,GAENC,KAAK,GACL,cADK,GAEL;AATC,OAFT;AAAA,iBAaGH,IAbH,eAcE;AAAA;AAAA;AAAA;AAAA,cAdF,EAeGO,QAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAqBD;KAhCuBR,I","sourcesContent":["interface Itext {\n  text?: any;\n  bold?: boolean;\n  medium?: boolean;\n  black?: boolean;\n  fontSize?: string;\n  //   color?: \"white\" | \"black\" | \"#ff761b\";\n  white?: boolean;\n  orange?: boolean;\n  nextText?: any;\n  className?: string;\n}\nexport default function Text({\n  text,\n  bold,\n  medium,\n  black,\n  fontSize,\n  white,\n  orange,\n  nextText,\n  className,\n}: Itext) {\n  return (\n    <>\n      <h1\n        className={className}\n        style={{\n          color: white ? \"white\" : orange ? \"#ff761b\" : \"black\",\n          fontSize,\n          fontFamily: bold\n            ? \"Roboto-Bold\"\n            : medium\n            ? \"Roboto-Medium\"\n            : black\n            ? \"Roboto-Black\"\n            : \"Roboto-Regular\",\n        }}>\n        {text}\n        <br />\n        {nextText}\n      </h1>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}